services:
  web:
    image: caddy:2
    restart: unless-stopped
    networks:
      - frontend
    volumes:
      - caddy-data:/data
      - caddy-config:/config
      - ./caddy:/etc/caddy
    ports:
      - 80:8080/tcp
      - 80:8080/udp
      - 443:8443/tcp
      - 443:8443/udp
    user: "983:983"
  anubis:
    image: ghcr.io/techarohq/anubis:latest
    restart: unless-stopped
    networks:
      - frontend
    environment:
      - BIND=:8080
      - DIFFICULTY=4
      - TARGET=http://forgejo:3000
  forgejo:
    image: codeberg.org/forgejo/forgejo:12
    environment:
      - USER_UID=981
      - USER_GID=981
      - FORGEJO__server__DOMAIN=code.ffmpeg.org
      - FORGEJO__service__NO_REPLY_ADDRESS=noreply.code.ffmpeg.org
      - FORGEJO__ui__DEFAULT_SHOW_FULL_NAME=true
      - FORGEJO__repository.signing__SIGNING_KEY=/data/gitea/conf/signing_key_ed25519.pub
      - FORGEJO__repository.signing__FORMAT=ssh
      - FORGEJO__repository.signing__SIGNING_NAME=FFmpeg Forgejo
      - FORGEJO__repository.signing__SIGNING_EMAIL=code@ffmpeg.org
      - FORGEJO__repository.signing__DEFAULT_TRUST_MODEL=collaborator
      - FORGEJO__repository.signing__INITIAL_COMMIT=always
      - FORGEJO__repository.signing__WIKI=twofa
      - FORGEJO__repository.signing__CRUD_ACTIONS=pubkey,twofa
      - FORGEJO__repository.signing__MERGES=pubkey,twofa,commitssigned
      - FORGEJO__oauth2__JWT_SECRET=${JWT_SECRET}
      - FORGEJO__server__LFS_JWT_SECRET=${LFS_JWT_SECRET}
      - FORGEJO__security__SECRET_KEY=${SECRET_KEY}
      - FORGEJO__security__INTERNAL_TOKEN=${INTERNAL_TOKEN}
      - FORGEJO__database__DB_TYPE=mysql
      - FORGEJO__database__HOST=/run/mysqld/mysqld.sock
      - FORGEJO__database__NAME=${FORGEJO_DB_DATABASE}
      - FORGEJO__database__USER=${FORGEJO_DB_USER}
      - FORGEJO__database__PASSWD=${FORGEJO_DB_PASSWORD}
      - FORGEJO__cache__ADAPTER=redis
      - FORGEJO__cache__HOST=redis+socket:///var/valkey.sock?db=0&pool_size=100&idle_timeout=180s
      - FORGEJO__cache__ITEM_TTL=72h
      - FORGEJO__server__LANDING_PAGE=/FFmpeg
      - FORGEJO__storage__STORAGE_TYPE=minio
      - FORGEJO__storage__SERVE_DIRECT=false
      - FORGEJO__storage__MINIO_BUCKET_LOOKUP=dns
      - FORGEJO__storage__MINIO_USE_SSL=${OS_USE_SSL}
      - FORGEJO__storage__MINIO_ENDPOINT=${OS_ENDPOINT}
      - FORGEJO__storage__MINIO_ACCESS_KEY_ID=${OS_ACCESS_ID}
      - FORGEJO__storage__MINIO_SECRET_ACCESS_KEY=${OS_ACCESS_KEY}
      - FORGEJO__storage__MINIO_BUCKET=${OS_BUCKET}
      - FORGEJO__storage__MINIO_LOCATION=${OS_LOCATION}
      - FORGEJO__mailer__ENABLED=true
      - FORGEJO__mailer__SMTP_ADDR=ffmpeg.org
      - FORGEJO__mailer__SMTP_PORT=25
      - FORGEJO__mailer__PROTOCOL=smtp+starttls
      - FORGEJO__mailer__FROM=code@ffmpeg.org
      - FORGEJO__mailer__ENABLE_HELO=true
      - FORGEJO__mailer__HELO_HOSTNAME=code.ffmpeg.org
      - FORGEJO__mailer__SUBJECT_PREFIX=[FFFjo]
      - FORGEJO__email.incoming__ENABLED=true
      - FORGEJO__email.incoming__REPLY_TO_ADDRESS=${IMAP_ADDRESS}
      - FORGEJO__email.incoming__HOST=${IMAP_HOST}
      - FORGEJO__email.incoming__PORT=${IMAP_PORT}
      - FORGEJO__email.incoming__USE_TLS=${IMAP_TLS}
      - FORGEJO__email.incoming__USERNAME=${IMAP_USER}
      - FORGEJO__email.incoming__PASSWORD=${IMAP_PASS}
      - FORGEJO__queue__TYPE=redis
      - FORGEJO__queue__CONN_STR=redis+socket:///var/valkey_queue.sock?db=0&pool_size=25&idle_timeout=180s
      - FORGEJO__repository.pull-request__DEFAULT_MERGE_STYLE=rebase
      - FORGEJO__repository__USE_COMPAT_SSH_URI=false
      - FORGEJO__cron.repo_health_check__TIMEOUT=300s
      - FORGEJO__log__MODE=console
      - FORGEJO__log__LEVEL=Info
      - FORGEJO__log__STACKTRACE_LEVEL=None
      - FORGEJO__webhook__ALLOWED_HOST_LIST=external,ircbot
    restart: unless-stopped
    networks:
      - frontend
    volumes:
      - ${FORGEJO_DATA_DIR}:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - db-socket:/run/mysqld
      - type: volume
        source: valkey-data
        target: /var/valkey.sock
        volume:
          subpath: valkey.sock
      - type: volume
        source: valkey-queue-data
        target: /var/valkey_queue.sock
        volume:
          subpath: valkey.sock
    ports:
      - 22:22/tcp
    depends_on:
      db:
        condition: service_healthy
      valkey_main:
        condition: service_started
      valkey_queue:
        condition: service_started
  ircbot:
    build:
      context: .
      pull: true
      dockerfile_inline: |
        FROM python:3.13-slim
        RUN pip install --no-cache https://github.com/BtbN/SimpleIrcRelay/archive/refs/heads/master.zip
    environment:
      - IRC_SERVER=${IRC_SERVER}
      - IRC_PORT=${IRC_PORT}
      - IRC_CHANNEL=${IRC_CHANNEL}
      - IRC_NICK=${IRC_NICK}
      - IRC_HTTP_HOST=0.0.0.0
      - IRC_HTTP_PORT=8787
      - SMTP_HOST=ffmpeg.org
      - SMTP_PORT=25
      - SMTP_TLS=true
      - MAIL_FROM=code@ffmpeg.org
      - MAIL_TO=ffmpeg-devel@ffmpeg.org
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - frontend
    command: simpleircrelay
  db:
    image: mariadb:11
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_RANDOM_ROOT_PASSWORD=1
      - MARIADB_USER=${FORGEJO_DB_USER}
      - MARIADB_PASSWORD=${FORGEJO_DB_PASSWORD}
      - MARIADB_DATABASE=${FORGEJO_DB_DATABASE}
    restart: unless-stopped
    ulimits:
      memlock: "262144"
    networks:
      - backend
    volumes:
      - db-data:/var/lib/mysql
      - db-socket:/run/mysqld
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
  valkey_main:
    image: valkey/valkey:8
    restart: unless-stopped
    volumes:
      - ./valkey/valkey.conf:/etc/valkey.conf
      - valkey-data:/data
    environment:
      - VALKEY_EXTRA_FLAGS=/etc/valkey.conf
  valkey_queue:
    image: valkey/valkey:8
    restart: unless-stopped
    volumes:
      - ./valkey/valkey_queue.conf:/etc/valkey.conf
      - valkey-queue-data:/data
    environment:
      - VALKEY_EXTRA_FLAGS=/etc/valkey.conf

volumes:
  db-data:
  db-socket:
  valkey-data:
  valkey-queue-data:
  caddy-data:
  caddy-config:

networks:
  frontend:
    enable_ipv6: true
  backend:
    external: false
